{"mappings":"AEGA;IACE,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;IACrD,iBAAiB,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;CAClD;AAED,wBAAS,MAAM,CAAC,MAAM,SAAK,GAAG,OAAO,CAmCpC;AAED,eAAe,MAAM,CAAC","sources":["src/src/config.ts","src/src/requester.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport requester from \"./requester\";\n\ninterface IGather {\n  apiKey: string;\n  getMap(spaceId: string, mapId: string): Promise<any>;\n  getEmailGuestlist(spaceId: string): Promise<any>;\n}\n\nfunction Gather(apiKey = \"\"): IGather {\n  const getMap = (spaceId: string, mapId: string) => {\n    // TODO: Catch nullish value for params\n    const _formattedSpaceID = spaceId.replace(/\\//gi, \"\\\\\\\\\");\n    const _space = \"?spaceId=\" + _formattedSpaceID;\n    const _map = \"&mapId=\" + mapId;\n    const _apiKey = \"&apiKey=\" + apiKey;\n    return _sendRequest(\"getMap\" + _space + _map + _apiKey);\n  };\n\n  const getEmailGuestlist = (spaceId: string) => {\n    // TODO: Catch nullish value for params\n    const _space = \"?spaceId=\" + spaceId;\n    const _apiKey = \"&apiKey=\" + apiKey;\n    return _sendRequest(\"getEmailGuestlist\" + _space + _apiKey);\n  };\n\n  const _sendRequest = async (path: string) => {\n    try {\n      const res = await requester.get(path, {\n        validateStatus: function (status) {\n          return status >= 200 && status < 300;\n        },\n      });\n      return res.data;\n    } catch (error: any) {\n      console.log(error.message);\n    }\n  };\n\n  return {\n    apiKey,\n    getEmailGuestlist,\n    getMap,\n  };\n}\n\nexport default Gather;\n"],"names":[],"version":3,"file":"index.d.ts.map","sourceRoot":"../"}